create schema if not exists "daily_scrum";

create table "daily_scrum"."daily_scrum_update_answers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "daily_scrum_update_entry_id" bigint not null,
    "daily_scrum_update_question_id" bigint not null,
    "answer" text not null default '' :: text
);

create table "daily_scrum"."daily_scrum_update_entries" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "daily_scrum_update_form_id" bigint not null,
    "submitted_user_id" uuid not null,
    "time_zone" text not null default '' :: text,
    "date" timestamp with time zone not null
);

create table "daily_scrum"."daily_scrum_update_forms" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "description" text not null default '' :: text,
    "workspace_id" bigint not null
);

create table "daily_scrum"."daily_scrum_update_questions" (
    "daily_scrum_update_form_id" bigint not null,
    "question" text not null,
    "brief_question" text not null,
    "placeholder" text,
    "description" text,
    "is_required" boolean not null,
    "max_length" integer,
    "order" integer not null,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "id" bigint generated by default as identity not null
);

create table "daily_scrum"."invitations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "workspace_id" bigint not null,
    "code" uuid not null default gen_random_uuid()
);

create table "daily_scrum"."members" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "updated_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "user_id" uuid not null,
    "workspace_id" bigint not null,
    "role" role not null default 'member' :: role
);

create table "daily_scrum"."profiles" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "update_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "name" text not null default '' :: text,
    "display_name" text not null default '' :: text
);

create table "daily_scrum"."workspace_settings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "workspace_id" bigint not null,
    "attribute_key" text not null default '' :: text,
    "attribute_value" text not null default '' :: text
);

create table "daily_scrum"."workspaces" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "updated_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    "name" text not null default '' :: text,
    "hash_id" text not null default '' :: text
);

CREATE UNIQUE INDEX daily_scrum_update_answers_pkey ON daily_scrum.daily_scrum_update_answers USING btree (id);

CREATE UNIQUE INDEX daily_scrum_update_entries_pkey ON daily_scrum.daily_scrum_update_entries USING btree (id);

CREATE UNIQUE INDEX daily_scrum_update_forms_pkey ON daily_scrum.daily_scrum_update_forms USING btree (id);

CREATE UNIQUE INDEX daily_scrum_update_questions_pkey ON daily_scrum.daily_scrum_update_questions USING btree (id);

CREATE UNIQUE INDEX invitations_code_key ON daily_scrum.invitations USING btree (code);

CREATE UNIQUE INDEX invitations_pkey ON daily_scrum.invitations USING btree (id);

CREATE UNIQUE INDEX members_pkey ON daily_scrum.members USING btree (id, user_id);

CREATE UNIQUE INDEX profiles_pkey ON daily_scrum.profiles USING btree (id);

CREATE UNIQUE INDEX workspace_settings_pkey ON daily_scrum.workspace_settings USING btree (id);

CREATE UNIQUE INDEX workspaces_pkey ON daily_scrum.workspaces USING btree (id);

alter table
    "daily_scrum"."daily_scrum_update_answers"
add
    constraint "daily_scrum_update_answers_pkey" PRIMARY KEY using index "daily_scrum_update_answers_pkey";

alter table
    "daily_scrum"."daily_scrum_update_entries"
add
    constraint "daily_scrum_update_entries_pkey" PRIMARY KEY using index "daily_scrum_update_entries_pkey";

alter table
    "daily_scrum"."daily_scrum_update_forms"
add
    constraint "daily_scrum_update_forms_pkey" PRIMARY KEY using index "daily_scrum_update_forms_pkey";

alter table
    "daily_scrum"."daily_scrum_update_questions"
add
    constraint "daily_scrum_update_questions_pkey" PRIMARY KEY using index "daily_scrum_update_questions_pkey";

alter table
    "daily_scrum"."invitations"
add
    constraint "invitations_pkey" PRIMARY KEY using index "invitations_pkey";

alter table
    "daily_scrum"."members"
add
    constraint "members_pkey" PRIMARY KEY using index "members_pkey";

alter table
    "daily_scrum"."profiles"
add
    constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table
    "daily_scrum"."workspace_settings"
add
    constraint "workspace_settings_pkey" PRIMARY KEY using index "workspace_settings_pkey";

alter table
    "daily_scrum"."workspaces"
add
    constraint "workspaces_pkey" PRIMARY KEY using index "workspaces_pkey";

alter table
    "daily_scrum"."invitations"
add
    constraint "invitations_code_key" UNIQUE using index "invitations_code_key";